'''
找零兑换的动态规划算法从最简单的1分钱找零的最优解开始
逐步递加，直到我们需要的找零数
在找零递加的过程中，设法保持每一分钱的递加都是最优解，一直加到求解找到零钱数

递加过程保持最优的关键是，其依赖于更少钱数最优解的简单计算，而
更少钱数的最优解已经得到了

问题的最优解包含了更小规模子问题的最优解
这是一个最优化问题能够用动态规划策略解决的必要条件

'''

def dbMakeChange(coninValueList,change,minCoins):
  #从1分开始到change逐个计算最少硬币数
  for cents in range(1,change+1):
    #初始化一个最大值
    coinCount=cents
    #减去每个硬币，向后查最少coin数，同时记录总的最少数
    for j in [c for c in coinValueList if c<=cents]:
